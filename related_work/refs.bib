@inproceedings{10.5555/1785080.1785082,
author = {Rellermeyer, Jan S. and Alonso, Gustavo and Roscoe, Timothy},
title = {{R-OSGi: Distributed Applications through Software Modularization}},
year = {2007},
isbn = {3540767770},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
abstract = {In this paper we take advantage of the concepts developed for centralized module management, such as dynamic loading and unloading of modules, and show how they can be used to support the development and deployment of distributed applications. We do so through R-OSGi, a distributed middleware platform that extends the centralized, industry-standard OSGi specification to support distributed module management. To the developer, R-OSGi looks like a conventional module management tool. However, at deployment time, R-OSGi can be used to turn the application into a distributed application by simply indicating where the different modules should be deployed. At run time, R-OSGi represents distributed failures as module insertion and withdrawal operations so that the logic to deal with failures is the same as that employed to deal with dependencies among software modules. In doing so, R-OSGi greatly simplifies the development of distributed applications with no performance cost. In the paper we describe R-OSGi and several use cases. We also show with extensive experiments that R-OSGi has a performance comparable or better than that of RMI or UPnP, both commonly used distribution mechanisms with far less functionality than R-OSGi.},
booktitle = {Proceedings of the 8th ACM/IFIP/USENIX International Conference on Middleware},
pages = {1–20},
numpages = {20},
location = {Newport Beach, CA, USA},
series = {MIDDLEWARE2007}
}

@inproceedings{10.1145/1328279.1328290,
author = {Rellermeyer, Jan S. and Alonso, Gustavo and Roscoe, Timothy},
title = {{Building, Deploying, and Monitoring Distributed Applications with Eclipse and R-OSGI}},
year = {2007},
isbn = {9781605580159},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1328279.1328290},
doi = {10.1145/1328279.1328290},
abstract = {Designing and testing distributed applications is still a difficult task that requires in-depth knowledge about networking issues. Eclipse is, among other things, a powerful and widely used IDE for the development of complex applications, in particular modular applications for the OSGi framework. Our R-OSGi middleware supports the seamless distribution of OSGi applications along the boundaries of services. By combining R-OSGi with Eclipse into the R-OSGi Deployment Tool, we give developers a tool that automatically handles distribution in a transparent way and integrates the capabilities of R-OSGi into the Eclipse workflow. With this tool, building, deploying, and monitoring distributed applications is as easy as writing OSGi applications in Eclipse and using a graphical editor to visually create distributed deployments of the modules. The tool can also be used to great effect by researchers to test and benchmark distributed applications and for education purposes.},
booktitle = {Proceedings of the 2007 OOPSLA Workshop on Eclipse Technology EXchange},
pages = {50–54},
numpages = {5},
keywords = {R-OSGi, OSGi, concierge, deployment, Eclipse},
location = {Montreal, Quebec, Canada},
series = {eclipse '07}
}

@article{10.1109/2.53354,
author = {Mullender, Sape J. and van Rossum, Guido and Tanenbaum, Andrew S. and van Renesse, Robbert and van Staveren, Hans},
title = {{Amoeba: A Distributed Operating System for the 1990s}},
year = {1990},
issue_date = {May 1990},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
volume = {23},
number = {5},
issn = {0018-9162},
url = {https://doi.org/10.1109/2.53354},
doi = {10.1109/2.53354},
abstract = {A description is given of the Amoeba distributed operating system, which appears to users as a centralized system but has the speed, fault tolerance, security safeguards, and flexibility required for the 1990s. The Amoeba software is based on objects. Objects are managed by server processes and named using capabilities chosen randomly from a sparse name space. Amoeba has a unique, fast file system split into two parts: the bullet service stores immutable files contiguously on the disk; the directory service gives capabilities symbolic names and handles replication and atomicity, eliminating the need for a separate transaction management system. To bridge the gap with existing systems, Amoeba has a Unix emulation facility consisting of a library of Unix system call routines that make calls to the various Amoeba server processes.},
journal = {Computer},
month = may,
pages = {44–53},
numpages = {10}
}

@article{DBLP:journals/csys/PikePDFTT95,
  author    = {Rob Pike and
               David L. Presotto and
               Sean Dorward and
               Bob Flandrena and
               Ken Thompson and
               Howard Trickey and
               Phil Winterbottom},
  title     = {{Plan 9 from Bell Labs}},
  journal   = {Comput. Syst.},
  volume    = {8},
  number    = {2},
  pages     = {221--254},
  year      = {1995},
  url       = {http://www.usenix.org/publications/compsystems/1995/sum\_pike.pdf},
  timestamp = {Sun, 10 May 2020 21:17:35 +0200},
  biburl    = {https://dblp.org/rec/journals/csys/PikePDFTT95.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.5555/1267569.1267573,
author = {Yl\"{o}nen, Tatu},
title = {{SSH: Secure Login Connections over the Internet}},
year = {1996},
publisher = {USENIX Association},
address = {USA},
abstract = {SSH provides secure login, file transfer, X11, and TCP/IP connections over an untrusted network. It uses cryptographic authentication, automatic session encryption, and integrity protection for transferred data. RSA is used for key exchange and authentication, and symmetric algorithms (e.g., IDEA or three-key triple-DES) for encrypting transferred data.SSH is intended as a replacement for the existing rsh, rlogin, rcp, rdist, and telnet protocols. SSH is currently (March 1996) being used at thousands of sites in at least 50 countries. Its users include top universities, research laboratories, many major corporations, and numerous smaller companies and individuals.The SSH protocol can also be used as a generic transport layer encryption mechanism, providing both host authentication and user authentication, together with privacy and integrity protection.},
booktitle = {Proceedings of the 6th Conference on USENIX Security Symposium, Focusing on Applications of Cryptography - Volume 6},
pages = {4},
numpages = {1},
location = {San Jose, California},
series = {SSYM'96}
}
